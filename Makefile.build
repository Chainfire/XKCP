<?xml version="1.0"?>
<!--
The eXtended Keccak Code Package (XKCP)
https://github.com/XKCP/XKCP

Implementation by Gilles Van Assche and Ronny Van Keer, hereby denoted as "the implementer".

For more information, feedback or questions, please refer to the Keccak Team website:
https://keccak.team/

To the extent possible under law, the implementer has waived all copyright
and related or neighboring rights to the source code in this file.
http://creativecommons.org/publicdomain/zero/1.0/
-->
<build all="all" xmlns:xi="http://www.w3.org/2001/XInclude">

    <xi:include href="lib/HighLevel.build"/>
    <xi:include href="lib/LowLevel.build"/>
    <xi:include href="tests/SUPERCOP/SUPERCOP.build"/>
    <xi:include href="tests/NIST_LWC/NIST_LWC.build"/>
    <xi:include href="doc/HOWTO-customize.build"/>

    <!-- For the name of the targets, please see the end of this file. -->

    <fragment name="common">
        <h>lib/common/align.h</h>
        <h>lib/common/brg_endian.h</h>
    </fragment>

    <!-- *** Utilities *** -->

    <!-- The unit tests -->
    <fragment name="UT" inherits="common">
        <c>tests/UnitTests/main.c</c>
        <c>tests/UnitTests/UT.c</c>
        <h>tests/UnitTests/UT.h</h>
        <c>tests/UnitTests/testPermutations.c</c>
        <h>tests/UnitTests/testPermutations.h</h>
        <h>tests/UnitTests/testSnP.inc</h>
        <h>tests/UnitTests/testPlSnP.inc</h>
        <c>tests/UnitTests/testSponge.c</c>
        <h>tests/UnitTests/testSponge.inc</h>
        <h>tests/UnitTests/testSponge.h</h>
        <c>tests/UnitTests/testDuplex.c</c>
        <h>tests/UnitTests/testDuplex.inc</h>
        <h>tests/UnitTests/testDuplex.h</h>
        <c>tests/UnitTests/testMotorist.c</c>
        <h>tests/UnitTests/testMotorist.inc</h>
        <h>tests/UnitTests/testMotorist.h</h>
        <c>tests/UnitTests/testKeyakv2.c</c>
        <h>tests/UnitTests/testKeyakv2.inc</h>
        <h>tests/UnitTests/testKeyakv2.h</h>
        <c>tests/UnitTests/testKetjev2.c</c>
        <h>tests/UnitTests/testKetjev2.h</h>
        <h>tests/UnitTests/testKetjev2.inc</h>
        <c>tests/UnitTests/genKAT.c</c>
        <h>tests/UnitTests/genKAT.h</h>
        <c>tests/UnitTests/testPRG.c</c>
        <h>tests/UnitTests/testPRG.inc</h>
        <h>tests/UnitTests/testPRG.h</h>
        <c>tests/UnitTests/testKangarooTwelve.c</c>
        <h>tests/UnitTests/testKangarooTwelve.h</h>
        <c>tests/UnitTests/testKravatte.c</c>
        <h>tests/UnitTests/testKravatte.h</h>
        <c>tests/UnitTests/testKravatteModes.c</c>
        <h>tests/UnitTests/testKravatteModes.h</h>
        <c>tests/UnitTests/testSP800-185.c</c>
        <h>tests/UnitTests/testSP800-185.h</h>
        <c>tests/UnitTests/testXoofff.c</c>
        <h>tests/UnitTests/testXoofff.h</h>
        <c>tests/UnitTests/testXoofffModes.c</c>
        <h>tests/UnitTests/testXoofffModes.h</h>
        <c>tests/UnitTests/testXoodyak.c</c>
        <h>tests/UnitTests/testXoodyak.h</h>
    </fragment>

    <fragment name="UnitTests" inherits="All UT"/>


    <!-- The benchmarking tool -->

    <fragment name="BM" inherits="common">
        <c>tests/Benchmarks/main.c</c>
        <c>tests/Benchmarks/testPerformance.c</c>
        <h>tests/Benchmarks/timing.h</h>
        <h>tests/Benchmarks/testPerformance.h</h>
        <h>tests/Benchmarks/timingSnP.inc</h>
        <h>tests/Benchmarks/timingPlSnP.inc</h>
        <h>tests/Benchmarks/timingSponge.inc</h>
        <h>tests/Benchmarks/timingKeyak.inc</h>
        <c>tests/Benchmarks/testXooPerformance.c</c>
        <h>tests/Benchmarks/testXooPerformance.h</h>
        <h>tests/Benchmarks/timingXooSnP.inc</h>
        <h>tests/Benchmarks/timingXooPlSnP.inc</h>
        <gcc>-lm</gcc>
    </fragment>

    <fragment name="Benchmarks" inherits="All BM"/>

    <!-- To compute a hash of a file -->
    <fragment name="KeccakSum" inherits="FIPS202 SP800-185 KangarooTwelve">
        <c>util/KeccakSum/KeccakSum.c</c>
        <c>util/KeccakSum/base64.c</c>
        <h>util/KeccakSum/base64.h</h>
    </fragment>

    <!-- To make a library -->
    <fragment name="libXKCP.a" inherits="All"/>
    <fragment name="libXKCP.so" inherits="All"/>

    <!-- *** CAESAR-related targets *** -->

    <fragment name="crypto_aead_test">
        <h>tests/SUPERCOP/test_crypto_aead.h</h>
        <c>tests/SUPERCOP/test_crypto_aead.c</c>
    </fragment>

    <!-- *** Targets *** -->

    <fragment name="serial-fallbacks" inherits="1600times2on1 1600times4on1 1600times8on1"/>

    <!-- Reference implementations -->
    <fragment name="reference" inherits="reference200 reference400 reference800 reference1600 serial-fallbacks Ket-SnP XooReference XooOptimizedTimes4_On1 XooOptimizedTimes8_On1 XooOptimizedTimes16_On1">
        <c>tests/UnitTests/displayIntermediateValues.c</c>
        <h>tests/UnitTests/displayIntermediateValues.h</h>
        <define>KeccakReference</define>
        <gcc>-O</gcc>
    </fragment>

    <!-- Reference implementations dedicated to 32-bit platforms
        (i.e., featuring bit interleaving for Keccak-p[1600]) -->
    <fragment name="reference32bits" inherits="reference200 reference400 reference800 reference1600-32bits serial-fallbacks Ket-SnP XooReference XooOptimizedTimes4_On1 XooOptimizedTimes8_On1 XooOptimizedTimes16_On1">
        <c>tests/UnitTests/displayIntermediateValues.c</c>
        <h>tests/UnitTests/displayIntermediateValues.h</h>
        <define>KeccakReference</define>
        <define>KeccakReference32BI</define>
        <gcc>-O</gcc>
    </fragment>

    <!-- Compact implementations -->
    <fragment name="compact" inherits="compact200 reference400 compact800 compact1600 serial-fallbacks Ket-SnP XooOptimized32 XooOptimizedTimes4_On1 XooOptimizedTimes8_On1 XooOptimizedTimes16_On1"/>

    <!-- Generically optimized 32-bit implementations -->
    <fragment name="generic32" inherits="reference200 reference400 optimized800u2 inplace1600bi serial-fallbacks Ket-SnP XooOptimized32 XooOptimizedTimes4_On1 XooOptimizedTimes8_On1 XooOptimizedTimes16_On1"/>
    <!-- Generically optimized 32-bit implementations, featuring lane complementing -->
    <fragment name="generic32lc" inherits="reference200 reference400 optimized800lcu2 inplace1600bi serial-fallbacks Ket-SnP XooOptimized32 XooOptimizedTimes4_On1 XooOptimizedTimes8_On1 XooOptimizedTimes16_On1"/>

    <!-- Generically optimized 64-bit implementations -->
    <fragment name="generic64" inherits="reference200 reference400 optimized800ufull optimized1600ufull serial-fallbacks Ket-SnP XooOptimized32 XooOptimizedTimes4_On1 XooOptimizedTimes8_On1 XooOptimizedTimes16_On1"/>
    <!-- Generically optimized 64-bit implementations, featuring lane complementing -->
    <fragment name="generic64lc" inherits="reference200 reference400 optimized800lcufull optimized1600lcufull serial-fallbacks Ket-SnP XooOptimized32 XooOptimizedTimes4_On1 XooOptimizedTimes8_On1 XooOptimizedTimes16_On1"/>

    <!-- Assembler optimized 64-bit implementations -->
    <fragment name="asmX86-64" inherits="reference200 reference400 reference800 optimized1600AsmX86-64 serial-fallbacks Ket-SnP XooOptimized32 XooOptimizedTimes4_On1 XooOptimizedTimes8_On1 XooOptimizedTimes16_On1"/>
    <!-- Assembler optimized 64-bit implementations -->
    <fragment name="asmX86-64shld" inherits="reference200 reference400 reference800 optimized1600AsmX86-64shld serial-fallbacks Ket-SnP XooOptimized32 XooOptimizedTimes4_On1 XooOptimizedTimes8_On1 XooOptimizedTimes16_On1"/>

    <!-- Implementations selected for the Nehalem microarchitecture -->
    <fragment name="Nehalem" inherits="reference200 reference400 optimized800lcufull optimized1600lcufull SIMD128-SSE2u2 1600times4on2 1600times8on2 Ket-SnP XooOptimizedSIMD128 XooOptimizedTimes4_SIMD128 XooOptimizedTimes8_On1 XooOptimizedTimes16_On1"/>

	<!-- Implementations selected for the Sandy Bridge microarchitecture -->
    <fragment name="SandyBridge" inherits="reference200 reference400 optimized800lcufull optimized1600lcufullshld SIMD128-SSE2ufull 1600times4on2 1600times8on2 Ket-SnP XooOptimizedSIMD128 XooOptimizedTimes4_SIMD128 XooOptimizedTimes8_On1 XooOptimizedTimes16_On1"/>
    <!-- Implementations selected for the Bulldozer microarchitecture -->
    <fragment name="Bulldozer" inherits="reference200 reference400 optimized800lcufull optimized1600XOPufull SIMD128-XOPufull 1600times4on2 1600times8on2 Ket-SnP XooOptimizedSIMD128 XooOptimizedTimes4_SIMD128 XooOptimizedTimes8_On1 XooOptimizedTimes16_On1"/>
    <!-- Implementations selected for the Haswell and Skylake microarchitectures -->
    <fragment name="Haswell" inherits="reference200 reference400 optimized800lcufull optimized1600AVX2 SIMD128-SSE2u2 SIMD256-AVX2u12 1600times8on4 Ket-SnP XooOptimizedSIMD128 XooOptimizedTimes4_SIMD128 XooOptimizedTimes8_AVX2 XooOptimizedTimes16_On1"/>

    <!-- Implementations selected for the SkylakeX microarchitecture -->
    <fragment name="SkylakeX"  inherits="reference200 reference400 optimized800lcufull optimized1600AVX512a SIMD512-2-AVX512u12 SIMD512-4-AVX512u12 SIMD512-8-AVX512u12 Ket-SnP XooOptimizedSIMD512 XooOptimizedTimes4_AVX512 XooOptimizedTimes8_AVX512 XooOptimizedTimes16_AVX512"/>

    <!-- Implementations selected for ARMv6 -->
    <fragment name="ARMv6" inherits="optimized200ARMv6M optimized400ARMv6M optimized800ARMv6Mu2 optimized1600ARMv6Mu2 serial-fallbacks Ket-optimizedLE XooOptimizedARMv6 XooOptimizedTimes4_On1 XooOptimizedTimes8_On1 XooOptimizedTimes16_On1"/>
    <!-- Implementations selected for ARMv6M -->
    <fragment name="ARMv6M" inherits="optimized200ARMv6M optimized400ARMv6M optimized800ARMv6Mu2 optimized1600ARMv6Mu2 serial-fallbacks Ket-optimizedLE XooOptimizedARMv6M XooOptimizedTimes4_On1 XooOptimizedTimes8_On1 XooOptimizedTimes16_On1"/>
    <!-- Implementations selected for ARMv7M -->
    <fragment name="ARMv7M" inherits="optimized200ARMv7M optimized400ARMv7M optimized800ARMv7Mu2 inplace1600ARMv7M serial-fallbacks Ket-ARMv7M XooOptimizedARMv7M XooOptimizedTimes4_On1 XooOptimizedTimes8_On1 XooOptimizedTimes16_On1"/>
    <!-- Implementations selected for ARMv7A -->
    <fragment name="ARMv7A" inherits="reference200 reference400 optimized800ARMv7Au2 optimized1600ARMv7A 1600times2ARMV7A 1600times4on2 1600times8on2 Ket-optimizedLE XooOptimizedARMv7A XooOptimizedTimes4_ARMv7A XooOptimizedTimes8_On1 XooOptimizedTimes16_On1"/> <!-- XooOptimizedTimes4_On1 -->

    <!-- Implementations selected for ARMv8A -->
    <fragment name="ARMv8A" inherits="reference200 reference400 optimized800ARMv8A optimized1600ARMv8A serial-fallbacks Ket-optimizedLE XooOptimized32 XooOptimizedTimes4_On1 XooOptimizedTimes8_On1 XooOptimizedTimes16_On1"/>

    <!-- Implementations selected for 8-bit AVR -->
    <fragment name="AVR8" inherits="optimized200AVR8 optimized400AVR8 optimized800AVR8 optimized1600AVR8 serial-fallbacks Ket-SnP XooOptimizedAVR8 XooOptimizedTimes4_On1 XooOptimizedTimes8_On1 XooOptimizedTimes16_On1"/>

    <!-- Target names are of the form x/y where x is taken from the first set and y from the second set. -->
    <group all="XKCP">
        <product delimiter="/">
            <factor set="reference reference32bits compact generic32 generic32lc generic64 generic64lc asmX86-64 asmX86-64shld Nehalem SandyBridge Bulldozer Haswell SkylakeX ARMv6 ARMv6M ARMv7M ARMv7A ARMv8A AVR8"/>
            <factor set="UnitTests Benchmarks KeccakSum libXKCP.a libXKCP.so"/>
        </product>
    </group>

    <!-- Reference implementations -->
    <fragment name="Xreference" inherits="XooReference">
        <define>XooReference</define>
        <gcc>-O</gcc>
    </fragment>

    <fragment name="Xoptimized32" inherits="XooOptimized32"/>

    <group all="Xoodyak">
        <product delimiter="/">
            <factor set="Xreference Xoptimized32 XSIMD128 XSIMD512 XARMv6M XARMv7M"/>
            <factor set="Xoodyak_aead_kat Xoodyak_hash_kat Xoodyak_aead_pack Xoodyak_hash_pack"/>
        </product>
    </group>
</build>
